{"version":3,"sources":["explodeBlock.es6"],"names":["factory","define","amd","exports","module","require","jQuery","$","fn","explodeBlock","options","general_settings","extend","animate_in","animate_out","animate_duration","animate_type","window_height","scrollTop","trigger","window","on","outerHeight","this","each","create_alt_blocks_layer","$element_blocks","append","css","position","background-image","$this","data","background-size","background-position","background-repeat","opacity","overflow","$element_blocks_alt_layer","find","create_exlode_timeline","explode_tl","pause","add","to","x","y","scale","autoAlpha","seek","update_alt_blocks_layer","element_width","outerWidth","element_height","width","height","top","parseInt","left","animation_length","animation_trigger_start","animation_trigger_end","TimelineMax","resize","resizeTO","clearTimeout","setTimeout","bind","offset","progress","l_scroll_progress","TweenLite"],"mappings":"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","file":"explodeBlock.min.js","sourcesContent":["/*\n\n explodeBlock\n\n Author: lemehovskiy\n\n */\n\n;(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}\n\n(function ($) {\n\n    $.fn.explodeBlock = function (options) {\n\n        let general_settings = $.extend({\n            animate_in: 0.3,\n            animate_out: 0.7,\n            animate_duration: 1.5,\n            animate_type: 'scroll_position'\n\n        }, options);\n\n        let window_height,\n            scrollTop,\n            trigger;\n\n        $(window).on('scroll resize', function () {\n            window_height = $(window).outerHeight();\n            scrollTop = $(window).scrollTop();\n\n            trigger = scrollTop + window_height;\n        });\n\n\n        $(this).each(function () {\n\n            let $this = $(this),\n                animation_length = 0,\n                animation_trigger_start,\n                animation_trigger_end,\n                element_height,\n                element_width,\n                $element_blocks = $this.find('.block'),\n                $element_blocks_alt_layer,\n                explode_tl = new TimelineMax();\n\n\n            init();\n\n\n            function init() {\n                create_alt_blocks_layer();\n                update_alt_blocks_layer();\n                create_exlode_timeline();\n            }\n\n\n            function create_alt_blocks_layer() {\n                $element_blocks.each(function () {\n\n                    $(this).append($('<div></div>').css({\n                        'position': 'absolute',\n                        'background-image': 'url(' + $this.data('exlode-block-alt-img') + ')',\n                        'background-size': 'cover',\n                        'background-position': 'center',\n                        'background-repeat': 'no-repeat',\n                        'opacity': 0\n                    }));\n\n                    $(this).css({\n                        'overflow': 'hidden'\n                    })\n                });\n\n                $element_blocks_alt_layer = $element_blocks.find('div');\n            }\n\n\n            function create_exlode_timeline() {\n\n                explode_tl.pause();\n\n                explode_tl.add('move-in')\n                    .to($element_blocks, 1, {x: 0, y: 0, scale: 1}, 'move-in')\n                    .to($element_blocks_alt_layer, 1, {autoAlpha: 1}, 'move-in')\n\n                explode_tl.seek('move-in')\n\n            }\n\n\n            function update_alt_blocks_layer() {\n                element_width = $this.outerWidth();\n                element_height = $this.outerHeight();\n\n\n                $element_blocks_alt_layer.css({\n                    'width': element_width + 'px',\n                    'height': element_height + 'px'\n                });\n\n                $element_blocks.each(function () {\n                    $(this).find('div').css({\n                        'top': -parseInt($(this).css('top')) + 'px',\n                        'left': -parseInt($(this).css('left')) + 'px'\n                    });\n\n                });\n            }\n\n            $(window).resize(function () {\n                if (this.resizeTO) clearTimeout(this.resizeTO);\n                this.resizeTO = setTimeout(function () {\n                    $(this).trigger('resizeEnd');\n                }, 500);\n            });\n\n\n            $(window).bind('resizeEnd', function () {\n                update_alt_blocks_layer();\n            });\n\n\n            $(window).on('scroll resize', function () {\n\n                animation_trigger_start = $this.offset().top;\n                animation_trigger_end = animation_trigger_start + window_height + element_height;\n\n                animation_length = animation_trigger_end - animation_trigger_start;\n\n                if (trigger > animation_trigger_start && trigger < animation_trigger_end) {\n\n                    let progress = (trigger - animation_trigger_start) / animation_length;\n\n\n                    if (general_settings.animate_type == 'scroll_position') {\n\n                        let l_scroll_progress;\n\n                        if (progress < general_settings.animate_in) {\n\n                            l_scroll_progress = 1 / general_settings.animate_in * progress\n                        }\n\n                        else if (progress > general_settings.animate_in && progress < general_settings.animate_out) {\n\n                            l_scroll_progress = 1;\n                        }\n\n                        else {\n                            l_scroll_progress = 1 / general_settings.animate_out - 1 / general_settings.animate_out * progress\n                        }\n\n                        TweenLite.to(explode_tl, general_settings.animate_duration, {progress: l_scroll_progress});\n                    }\n\n\n                    else if (general_settings.animate_type == 'immediately') {\n\n                        if (progress < general_settings.animate_in) {\n\n                            TweenLite.to(explode_tl, general_settings.animate_duration, {progress: 0});\n                        }\n\n                        else if (progress > general_settings.animate_in && progress < general_settings.animate_out) {\n\n                            TweenLite.to(explode_tl, general_settings.animate_duration, {progress: 1});\n\n                        }\n\n                        else if (progress > general_settings.animate_out) {\n\n                            TweenLite.to(explode_tl, general_settings.animate_duration, {progress: 0});\n\n                        }\n                    }\n\n                }\n            })\n        });\n    }\n}));"]}