{"version":3,"sources":["explodeBlock.es6"],"names":["factory","define","amd","exports","module","require","jQuery","$","fn","explodeBlock","options","general_settings","extend","animate_in","animate_out","animate_duration","window_height","scrollTop","trigger","window","on","outerHeight","this","each","create_alt_blocks_layer","$element_blocks","append","css","position","background-image","$this","data","background-size","background-position","background-repeat","opacity","overflow","$element_blocks_alt_layer","find","create_exlode_timeline","explode_tl","pause","add","to","x","y","scale","autoAlpha","update_alt_blocks_layer","element_width","outerWidth","element_height","width","height","top","parseInt","left","animation_length","animation_trigger_start","animation_trigger_end","TimelineMax","resize","resizeTO","clearTimeout","setTimeout","bind","offset","progress","TweenLite"],"mappings":"cAQE,SAAUA,GAEc,kBAAXC,SAAyBA,OAAOC,IACvCD,QAAQ,UAAWD,GACO,mBAAZG,SACdC,OAAOD,QAAUH,EAAQK,QAAQ,WAEjCL,EAAQM,SAKf,SAAUC,GAEPA,EAAEC,GAAGC,aAAe,SAAUC,GAE1B,GAAIC,GAAmBJ,EAAEK,QACrBC,WAAY,GACZC,YAAa,GACbC,iBAAkB,KACnBL,GAECM,MAAAA,GACAC,MAAAA,GACAC,MAAAA,EAEJX,GAAEY,QAAQC,GAAG,gBAAiB,WAC1BJ,EAAgBT,EAAEY,QAAQE,cAC1BJ,EAAYV,EAAEY,QAAQF,YAEtBC,EAAUD,EAAYD,IAI1BT,EAAEe,MAAMC,KAAK,WAuBT,QAASC,KACLC,EAAgBF,KAAK,WAEjBhB,EAAEe,MAAMI,OAAOnB,EAAE,eAAeoB,KAC5BC,SAAY,WACZC,mBAAoB,OAASC,EAAMC,KAAK,wBAA0B,IAClEC,kBAAmB,QACnBC,sBAAuB,SACvBC,oBAAqB,YACrBC,QAAW,KAGf5B,EAAEe,MAAMK,KACJS,SAAY,aAIpBC,EAA4BZ,EAAgBa,KAAK,OAIrD,QAASC,KAELC,EAAWC,QAEXD,EAAWE,IAAI,WACVC,GAAGlB,EAAiB,GAAImB,EAAG,EAAGC,EAAG,EAAGC,MAAO,GAAI,WAC/CH,GAAGN,EAA2B,GAAIU,UAAW,GAAI,WAK1D,QAASC,KACLC,EAAgBnB,EAAMoB,aACtBC,EAAiBrB,EAAMT,cAGvBgB,EAA0BV,KACtByB,MAASH,EAAgB,KACzBI,OAAUF,EAAiB,OAG/B1B,EAAgBF,KAAK,WACjBhB,EAAEe,MAAMgB,KAAK,OAAOX,KAChB2B,KAAQC,SAAShD,EAAEe,MAAMK,IAAI,QAAU,KACvC6B,MAASD,SAAShD,EAAEe,MAAMK,IAAI,SAAW,SAlErD,GAAIG,GAAQvB,EAAEe,MACVmC,EAAmB,EACnBC,MAAAA,GACAC,MAAAA,GACAR,MAAAA,GACAF,MAAAA,GACAxB,EAAkBK,EAAMQ,KAAK,UAC7BD,MAAAA,GACAG,EAAa,GAAIoB,cAMrB,WACIpC,IACAwB,IACAT,OAuDJhC,EAAEY,QAAQ0C,OAAO,WACTvC,KAAKwC,UAAUC,aAAazC,KAAKwC,UACrCxC,KAAKwC,SAAWE,WAAW,WACvBzD,EAAEe,MAAMJ,QAAQ,cACjB,OAIPX,EAAEY,QAAQ8C,KAAK,YAAa,WACxBjB,MAIJzC,EAAEY,QAAQC,GAAG,gBAAiB,WAO1B,GALAsC,EAA0B5B,EAAMoC,SAASZ,IACzCK,EAAwBD,EAA0B1C,EAAgBmC,EAElEM,EAAmBE,EAAwBD,EAEvCxC,EAAUwC,GAA2BxC,EAAUyC,EAAuB,CAEtE,GAAIQ,IAAYjD,EAAUwC,GAA2BD,CAMjDU,GAAWxD,EAAiBE,WAE5BuD,UAAUzB,GAAGH,EAAY7B,EAAiBI,kBAAmBoD,SAAU,IAGlEA,EAAWxD,EAAiBE,YAAcsD,EAAWxD,EAAiBG,YAE3EsD,UAAUzB,GAAGH,EAAY7B,EAAiBI,kBAAmBoD,SAAU,IAIlEA,EAAWxD,EAAiBG,aAEjCsD,UAAUzB,GAAGH,EAAY7B,EAAiBI,kBAAmBoD,SAAU","file":"explodeBlock.min.js","sourcesContent":["/*\n\n explodeBlock\n\n Author: lemehovskiy\n\n */\n\n;(function (factory) {\n    'use strict';\n    if (typeof define === 'function' && define.amd) {\n        define(['jquery'], factory);\n    } else if (typeof exports !== 'undefined') {\n        module.exports = factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n\n}\n\n(function ($) {\n\n    $.fn.explodeBlock = function (options) {\n\n        let general_settings = $.extend({\n            animate_in: 0.3,\n            animate_out: 0.7,\n            animate_duration: 1.5\n        }, options);\n\n        let window_height,\n            scrollTop,\n            trigger;\n\n        $(window).on('scroll resize', function () {\n            window_height = $(window).outerHeight();\n            scrollTop = $(window).scrollTop();\n\n            trigger = scrollTop + window_height;\n        });\n\n\n        $(this).each(function () {\n\n            let $this = $(this),\n                animation_length = 0,\n                animation_trigger_start,\n                animation_trigger_end,\n                element_height,\n                element_width,\n                $element_blocks = $this.find('.block'),\n                $element_blocks_alt_layer,\n                explode_tl = new TimelineMax();\n\n\n            init();\n\n\n            function init() {\n                create_alt_blocks_layer();\n                update_alt_blocks_layer();\n                create_exlode_timeline();\n            }\n\n\n            function create_alt_blocks_layer() {\n                $element_blocks.each(function () {\n\n                    $(this).append($('<div></div>').css({\n                        'position': 'absolute',\n                        'background-image': 'url(' + $this.data('exlode-block-alt-img') + ')',\n                        'background-size': 'cover',\n                        'background-position': 'center',\n                        'background-repeat': 'no-repeat',\n                        'opacity': 0\n                    }));\n\n                    $(this).css({\n                        'overflow': 'hidden'\n                    })\n                });\n\n                $element_blocks_alt_layer = $element_blocks.find('div');\n            }\n\n\n            function create_exlode_timeline() {\n\n                explode_tl.pause();\n\n                explode_tl.add('move-in')\n                    .to($element_blocks, 1, {x: 0, y: 0, scale: 1}, 'move-in')\n                    .to($element_blocks_alt_layer, 1, {autoAlpha: 1}, 'move-in')\n\n            }\n\n\n            function update_alt_blocks_layer() {\n                element_width = $this.outerWidth();\n                element_height = $this.outerHeight();\n\n\n                $element_blocks_alt_layer.css({\n                    'width': element_width + 'px',\n                    'height': element_height + 'px'\n                });\n\n                $element_blocks.each(function () {\n                    $(this).find('div').css({\n                        'top': -parseInt($(this).css('top')) + 'px',\n                        'left': -parseInt($(this).css('left')) + 'px'\n                    });\n\n                });\n            }\n\n            $(window).resize(function () {\n                if (this.resizeTO) clearTimeout(this.resizeTO);\n                this.resizeTO = setTimeout(function () {\n                    $(this).trigger('resizeEnd');\n                }, 500);\n            });\n\n\n            $(window).bind('resizeEnd', function () {\n                update_alt_blocks_layer();\n            });\n\n\n            $(window).on('scroll resize', function () {\n\n                animation_trigger_start = $this.offset().top;\n                animation_trigger_end = animation_trigger_start + window_height + element_height;\n\n                animation_length = animation_trigger_end - animation_trigger_start;\n\n                if (trigger > animation_trigger_start && trigger < animation_trigger_end) {\n\n                    let progress = (trigger - animation_trigger_start) / animation_length;\n\n                    // explode_tl.progress(progress);\n\n                    // TweenLite.to(explode_tl, general_settings.animate_duration, {progress: progress});\n\n                    if (progress < general_settings.animate_in) {\n\n                        TweenLite.to(explode_tl, general_settings.animate_duration, {progress: 0});\n                    }\n\n                    else if (progress > general_settings.animate_in && progress < general_settings.animate_out) {\n\n                        TweenLite.to(explode_tl, general_settings.animate_duration, {progress: 1});\n\n                    }\n\n                    else if (progress > general_settings.animate_out) {\n\n                        TweenLite.to(explode_tl, general_settings.animate_duration, {progress: 0});\n\n                    }\n                }\n            })\n        });\n    }\n}));"]}